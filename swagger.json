{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Slimmom API docs",
    "description": "API documentation for GoIT project 'Slimmom'. Backend github repository: https://github.com/DanTsvirkun/slimmom-backend",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "slimmom-backend.herokuapp.com",
  "basePath": "",
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Daily-rate",
      "description": "Daily-rate endpoints"
    },
    {
      "name": "Product-search",
      "description": "Product-search endpoints"
    },
    {
      "name": "Day",
      "description": "Day endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [
          {
            "name": "Request body",
            "in": "body",
            "description": "Registration's object",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Registration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/components/schemas/AfterRegistration"
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "parameters": [
          {
            "name": "Request body",
            "in": "body",
            "description": "Authentication's object",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/components/schemas/AfterLogin"
            }
          },
          "403": {
            "description": "Email doesn't exist / Password is wrong",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout",
        "parameters": [
          {
            "name": "Access token",
            "description": "'accessToken' field you get after authentication",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/auth/refresh": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get new pair of tokens",
        "parameters": [
          {
            "name": "Request body",
            "description": "Request body with session's id",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "sid": {
                  "type": "string",
                  "description": "Session's (sid field after authentication)"
                }
              }
            },
            "required": true
          },
          {
            "name": "Refresh token",
            "description": "'refreshToken' field you get after authentication",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/components/schemas/RefreshTokens"
            }
          },
          "400": {
            "description": "Invalid request body / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid refresh token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/daily-rate": {
      "get": {
        "tags": ["Daily-rate"],
        "summary": "Get daily rate information based on your characteristics",
        "parameters": [
          {
            "name": "Request body",
            "in": "body",
            "description": "Child's object",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Daily-rate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "dailyRate": {
                  "type": "number",
                  "description": "Daily rate in kcal"
                },
                "notAllowedProducts": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Not allowed product"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/daily-rate/{userId}": {
      "get": {
        "tags": ["Daily-rate"],
        "summary": "Post your characteristics to the website and get daily rate information",
        "parameters": [
          {
            "name": "Request body",
            "in": "body",
            "description": "Characteristics object",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Daily-rate"
            }
          },
          {
            "name": "Access token",
            "description": "'accessToken' field you get after authentication",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "User's id"
                },
                "dailyRate": {
                  "type": "number",
                  "description": "Daily rate in kcal"
                },
                "summaries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Updated summary",
                    "_id": {
                      "type": "ObjectId",
                      "description": "Day's id"
                    },
                    "date": {
                      "type": "string",
                      "description": "Day's date"
                    },
                    "kcalLeft": {
                      "type": "number",
                      "description": "Kcal left to consume"
                    },
                    "kcalConsumed": {
                      "type": "number",
                      "description": "Kcal consumed"
                    },
                    "dailyRate": {
                      "type": "number",
                      "description": "Daily rate in kcal"
                    },
                    "percentsOfDailyRate": {
                      "type": "number",
                      "description": "Percents consumed of daily rate"
                    },
                    "userId": {
                      "type": "ObjectId",
                      "description": "User's id"
                    },
                    "__v": {
                      "type": "integer",
                      "description": "MongoDB document service versionKey (ignore)"
                    }
                  }
                },
                "notAllowedProducts": {
                  "type": "array",
                  "description": "User's not allowed products (based on blood type)",
                  "items": {
                    "type": "ObjectId",
                    "description": "MongoDB object id"
                  }
                }
              }
            }
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/product": {
      "get": {
        "tags": ["Product-search"],
        "summary": "Search and get a list of products by query",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "description": "Query string",
            "required": true
          },
          {
            "name": "Access token",
            "description": "'accessToken' field you get after authentication",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "object",
                    "description": "Product's id"
                  },
                  "categories": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Product's category"
                    }
                  },
                  "weight": {
                    "type": "number",
                    "description": "Product's weight (100g)"
                  },
                  "title": {
                    "type": "object",
                    "description": "Product's russian and ukrainian titles",
                    "properties": {
                      "ru": {
                        "type": "string"
                      },
                      "ua": {
                        "type": "string"
                      }
                    }
                  },
                  "calories": {
                    "type": "number",
                    "description": "Product's kcal for 100g"
                  },
                  "groupBloodNotAllowed": {
                    "type": "array",
                    "description": "Product's allowed/not allowed status on all blood types (first item is null - 0 index in array)",
                    "items": {
                      "type": "boolean"
                    }
                  },
                  "__v": {
                    "type": "integer",
                    "description": "MongoDB document service versionKey (ignore)"
                  }
                }
              }
            }
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid query name / Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/day": {
      "post": {
        "tags": ["Day"],
        "summary": "Post an eaten product",
        "parameters": [
          {
            "name": "Request body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["date", "productId", "weight"],
              "properties": {
                "date": {
                  "type": "string",
                  "description": "Day's date",
                  "example": "2020-12-31"
                },
                "productId": {
                  "type": "string",
                  "description": "Product's id"
                },
                "weight": {
                  "type": "number",
                  "description": "Product's weight"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "eatenProduct": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Eaten product's description"
                    },
                    "weight": {
                      "type": "number",
                      "description": "Eaten product's weight"
                    },
                    "kcal": {
                      "type": "number",
                      "description": "kcal consumed"
                    },
                    "id": {
                      "type": "string",
                      "description": "Eaten product's id"
                    }
                  }
                },
                "day": {
                  "type": "object",
                  "description": "Day (or newDay) when the product was eaten",
                  "properties": {
                    "_id": {
                      "type": "ObjectId",
                      "description": "Day's id"
                    },
                    "eatenProducts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Eaten product's description"
                          },
                          "weight": {
                            "type": "number",
                            "description": "Eaten product's weight"
                          },
                          "kcal": {
                            "type": "number",
                            "description": "kcal consumed"
                          },
                          "id": {
                            "type": "string",
                            "description": "Eaten product's id"
                          }
                        }
                      }
                    },
                    "date": {
                      "type": "string",
                      "description": "Day's date",
                      "example": "2020-12-31"
                    },
                    "daySummary": {
                      "type": "ObjectId",
                      "description": "Id of the day's summary"
                    },
                    "__v": {
                      "type": "integer",
                      "description": "MongoDB document service versionKey (ignore)"
                    }
                  }
                },
                "daySummary": {
                  "type": "object",
                  "description": "Updated summary (or newSummary)",
                  "_id": {
                    "type": "ObjectId",
                    "description": "Day's id"
                  },
                  "date": {
                    "type": "string",
                    "description": "Day's date"
                  },
                  "kcalLeft": {
                    "type": "number",
                    "description": "Kcal left to consume"
                  },
                  "kcalConsumed": {
                    "type": "number",
                    "description": "Kcal consumed"
                  },
                  "dailyRate": {
                    "type": "number",
                    "description": "Daily rate in kcal"
                  },
                  "percentsOfDailyRate": {
                    "type": "number",
                    "description": "Percents consumed of daily rate"
                  },
                  "userId": {
                    "type": "ObjectId",
                    "description": "User's id"
                  },
                  "__v": {
                    "type": "integer",
                    "description": "MongoDB document service versionKey (ignore)"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Product not found / Habit not found / Invalid user / Invalid session",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Day"],
        "summary": "Delete eaten product",
        "parameters": [
          {
            "name": "Request body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["dayId", "eatenProductId"],
              "properties": {
                "dayId": {
                  "type": "ObjectId",
                  "description": "Day's id"
                },
                "eatenProductId": {
                  "type": "string",
                  "description": "Eaten product's id"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "description": "Updated summary",
              "properties": {
                "_id": {
                  "type": "ObjectId",
                  "description": "Day's id"
                },
                "date": {
                  "type": "string",
                  "description": "Day's date"
                },
                "kcalLeft": {
                  "type": "number",
                  "description": "Kcal left to consume"
                },
                "kcalConsumed": {
                  "type": "number",
                  "description": "Kcal consumed"
                },
                "dailyRate": {
                  "type": "number",
                  "description": "Daily rate in kcal"
                },
                "percentsOfDailyRate": {
                  "type": "number",
                  "description": "Percents consumed of daily rate"
                },
                "userId": {
                  "type": "ObjectId",
                  "description": "User's id"
                },
                "__v": {
                  "type": "integer",
                  "description": "MongoDB document service versionKey (ignore)"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Product not found / Day not found / Invalid user / Invalid session",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Day"],
        "summary": "Get info for day",
        "parameters": [
          {
            "name": "Request body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["date"],
              "properties": {
                "date": {
                  "type": "string",
                  "description": "Day's date",
                  "example": "2020-12-31"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "description": "Day (or newDay) when the product was eaten",
              "properties": {
                "_id": {
                  "type": "ObjectId",
                  "description": "Day's id"
                },
                "eatenProducts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Eaten product's description"
                      },
                      "weight": {
                        "type": "number",
                        "description": "Eaten product's weight"
                      },
                      "kcal": {
                        "type": "number",
                        "description": "kcal consumed"
                      },
                      "id": {
                        "type": "string",
                        "description": "Eaten product's id"
                      }
                    }
                  }
                },
                "date": {
                  "type": "string",
                  "description": "Day's date",
                  "example": "2020-12-31"
                },
                "daySummary": {
                  "type": "object",
                  "description": "Day's summary",
                  "properties": {
                    "_id": {
                      "type": "ObjectId",
                      "description": "Day's id"
                    },
                    "date": {
                      "type": "string",
                      "description": "Day's date"
                    },
                    "kcalLeft": {
                      "type": "number",
                      "description": "Kcal left to consume"
                    },
                    "kcalConsumed": {
                      "type": "number",
                      "description": "Kcal consumed"
                    },
                    "dailyRate": {
                      "type": "number",
                      "description": "Daily rate in kcal"
                    },
                    "percentsOfDailyRate": {
                      "type": "number",
                      "description": "Percents consumed of daily rate"
                    },
                    "userId": {
                      "type": "ObjectId",
                      "description": "User's id"
                    },
                    "__v": {
                      "type": "integer",
                      "description": "MongoDB document service versionKey (ignore)"
                    }
                  },
                  "__v": {
                    "type": "integer",
                    "description": "MongoDB document service versionKey (ignore)"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Day not found / Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Daily-rate": {
        "required": ["weight", "height", "age", "desiredWeight", "bloodType"],
        "type": "object",
        "properties": {
          "weight": {
            "type": "number",
            "description": "User's weight (kg)",
            "minimum": 20,
            "maximum": 500
          },
          "height": {
            "type": "number",
            "description": "User's height (cm)",
            "minimum": 100,
            "maximum": 250
          },
          "age": {
            "type": "number",
            "description": "User's age",
            "minimum": 18,
            "maximum": 100
          },
          "desiredWeight": {
            "type": "number",
            "description": "User's desired weight",
            "minimum": 20,
            "maximum": 500
          },
          "bloodType": {
            "type": "number",
            "description": "User's blood type",
            "enum": [1, 2, 3, 4]
          }
        }
      },
      "Registration": {
        "required": ["email", "password", "username"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          },
          "username": {
            "type": "string",
            "description": "User's name"
          }
        }
      },
      "AfterRegistration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User's id"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "username": {
            "type": "string",
            "description": "User's name"
          }
        }
      },
      "Login": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          }
        }
      },
      "AfterLogin": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Session's access token (needed for all requests)"
          },
          "refreshToken": {
            "type": "string",
            "description": "Session's refresh token (needed for /auth/refresh)"
          },
          "sid": {
            "type": "string",
            "description": "Session's id (needed for /auth/refresh)"
          },
          "user": {
            "type": "object",
            "description": "User's data",
            "properties": {
              "days": {
                "type": "array",
                "description": "User's days",
                "items": {
                  "type": "string",
                  "description": "MongoDB object id"
                }
              },
              "_id": {
                "type": "ObjectId",
                "description": "User's id"
              },
              "email": { "type": "string", "description": "User's email" },
              "passwordHash": {
                "type": "string",
                "description": "User's password hash"
              },
              "userData": {
                "type": "object",
                "description": "User's daily rate data",
                "properties": {
                  "id": { "type": "ObjectId", "description": "User's id" },
                  "dailyRate": {
                    "type": "string",
                    "description": "Your daily rate in kcal"
                  },
                  "summaries": {
                    "type": "array",
                    "description": "User's summaries",
                    "items": {
                      "type": "string",
                      "description": "MongoDB object id"
                    }
                  },
                  "notAllowedProducts": {
                    "type": "array",
                    "description": "User's not allowed products (based on blood type)",
                    "items": {
                      "type": "ObjectId",
                      "description": "MongoDB object id"
                    }
                  }
                }
              },
              "__v": {
                "type": "integer",
                "description": "MongoDB document service versionKey (ignore)"
              }
            }
          }
        }
      },
      "RefreshTokens": {
        "type": "object",
        "properties": {
          "newAccessToken": {
            "type": "string",
            "description": "Access token"
          },
          "newRefreshToken": {
            "type": "string",
            "description": "Refresh token"
          },
          "sid": {
            "type": "string",
            "description": "New session's id"
          }
        }
      }
    }
  }
}
